1 - A variável nregistros só é desincrementada quando a função de liberar espaço (6) é chamada. Isso ocorre pois assim eu tenho realmente o número dos registros que estão no arquivo de dados.
2 - A busca de chave primária retorna sempre o rrn da chave encontrada. Se o rrn é -1 a chave NÃO EXISTE. Isso implica em se a chave não é encontrada, também é retornado -1.
3 - Funções de comparação são confusas x-X:

Para qsort
int compare_a_type(const void * a, const void * b)
{
  if ( *(AType*)a >  *(AType*)b ) return 1;     //a vem depois de b --> [b, a]
  if ( *(AType*)a == *(AType*)b ) return 0;     //Ambos os valores são iguais --> a == b
  if ( *(AType*)a <  *(AType*)b ) return -1;    //a vem antes de b --> [a, b]
}

Para bsearch
int compare_a_type(const void * a, const void * b)
{
  if ( *(AType*)a >  *(AType*)b ) return 1;     //a é maior que b --> [b, a]
  if ( *(AType*)a == *(AType*)b ) return 0;     //Ambos os valores são iguais --> a == b
  if ( *(AType*)a <  *(AType*)b ) return -1;    //a é menor que b --> [a, b]
}

4 - Rotina de inserção nos indices
    Procurar se a chave já existe
    Se chave não existe criar um novo expaço para o registro no indice
    ORDENAR o índice

5 - Casos

Procurando C
[C--1 | C--1 | C --1 | C -3 | B-4 | A-5]
          ^
[C--1 | C--1 | C --1 | C --1 | B-4 | A-5]
          ^

Procurando A
[B-4 | A-5]
  ^
[A--1 | A--1 | A--1]
  ^
[A--1 | A--1 | A-3]
  ^
[A-5]
  ^
[A--1]
  ^

